# Variables
#-------------------------------------------------------------------------------
CC = arm-none-eabi-gcc
LD = arm-none-eabi-gcc
OBJCOPY = arm-none-eabi-objcopy
SIZE = arm-none-eabi-size

ARCH_FLAG += -mthumb -mcpu=cortex-m3 -msoft-float -mfix-cortex-m3-ldrd
NEWLIB_SUPPORT = -specs=nano.specs -specs=nosys.specs

CFLAGS += -c -fno-common -Os -std=c99 -g $(ARCH_FLAG) -MD\
		  -Wextra -Wshadow -Wimplicit-function-declaration -Wredundant-decls \
		  -Wstrict-prototypes -ffunction-sections -fdata-sections -Wall 

LDFLAGS += --static -nostartfiles $(ARCH_FLAG) $(NEWLIB_SUPPORT) \
           -Wl,-Map=$(BINARY_PATH)$(BINARY).map -Wl,--gc-sections  \
           -L$(BASE_DIR)/sys/ -Wl,--start-group $(LIBDEPS) -Wl,--end-group

LDSCRIPT = stm32f103x8.ld
OPENOCD_CFG = $(BASE_DIR)/sys/openocd.cfg

OBJS += $(BINARY).o
INCLUDE_PATH += -I$(BASE_DIR)/include

# Variable config from other makefile
include $(BASE_DIR)/Makefile.include

# Get global define
DEFS += $(foreach CONFIG,$(CONFIG),-D$(CONFIG))
CFLAGS += $(DEFS)

BINARY_PATH = ./bin/
VPATH += bin
OBJS_PATH := $(addprefix $(BINARY_PATH), $(OBJS))

# Target
#-------------------------------------------------------------------------------
all: bin_dir hex 
	$(SIZE) $(BINARY_PATH)$(BINARY).elf

bin_dir:
	mkdir -p bin

hex: $(BINARY).hex
bin: $(BINARY).bin
elf: $(BINARY).elf

# Make rules
include $(BASE_DIR)/rules.mk

lib:
	$(MAKE) --silent -C $(LIB_OPENCM3_DIR)
	$(MAKE) --silent -C $(LIB_FREERTOS_DIR)

flash:
	$(BASE_DIR)/tool/openocd_flash.sh $(OPENOCD_CFG) $(BINARY_PATH)$(BINARY).elf

clean:
	rm -rf *.bin *.elf *.o *.hex *.d *.map bin

cleanall:
	rm -rf *.bin *.elf *.o *.hex *.d *.map bin
	$(MAKE) clean -C $(LIB_OPENCM3_DIR)
	$(MAKE) clean -C $(LIB_FREERTOS_DIR)

# include auto-dependencies
-include $(OBJS_PATH:.o=.d)
	
# Other rules	
#-------------------------------------------------------------------------------
.SECONDARY: $(OBJS)
